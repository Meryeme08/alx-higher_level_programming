The ``7-base_geometry.py`` module
============================

Using ``7-base_geometry``
--------------------
Import function from module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

Test for float
>>> bg.integer_validator("width", 1.8)
Traceback (most recent call last):
...
TypeError: width must be an integer

Test for string
>>> bg.integer_validator("width", "1.3")
Traceback (most recent call last):
...
TypeError: width must be an integer
>>> bg.integer_validator("width", "alx")
Traceback (most recent call last):
...
TypeError: width must be an integer

test for wrong input
>>> bg.integer_validator("width", True)
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
...
ValueError: width must be greater than 0
>>> bg.integer_validator("width", -1)
Traceback (most recent call last):
...
ValueError: width must be greater than 0

>>> bg.integer_validator("width", [])
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", [2,4])
Traceback (most recent call last):
...
TypeError: width must be an integer
>>> bg.integer_validator("width", (2,3))
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", (2))

Test for missing argument
>>> bg.integer_validator("width", )
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
